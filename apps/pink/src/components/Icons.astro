---
const listGrayscale = await Astro.glob("../../public/icons/grayscale/*/*.svg")
const listColor = await Astro.glob("../../public/icons/color/*/*.svg")
---



<section
  class="common-section u-margin-block-start-36"
  x-data="{ show: 'gray'}"
>
  <div class="tabs">
    <ul class="secondary-tabs is-large">
      <li class="secondary-tabs-item">
        <button
          class="secondary-tabs-button"
          x-on:click="show = 'gray'"
          :disabled="show === 'gray'"
        >
          <span class="text">Grayscale</span>
        </button>
      </li>
      <li class="secondary-tabs-item">
        <button
          class="secondary-tabs-button"
          x-on:click="show = 'color'"
          :disabled="show === 'color'"
        >
          <span class="text">Color</span>
        </button>
      </li>
    </ul>
  </div>

  
  <div x-bind:class="show !== 'gray' ? 'u-hide' : ''">
    <ul
    class="grid-box u-margin-block-start-24"
    style="--grid-gap:1rem; --grid-item-size:8rem; --grid-item-size-small-screens:6rem;"
    >
        {listGrayscale.map((icon) => {
            const splitName = icon.default.split('/')
            const name = splitName[splitName.length - 1].split('.')[0]
            const isDark = icon.default.includes('/dark') ?? false
        if(isDark) return(
                <li class="grid-box-item u-only-dark">
                    <div class="card u-flex u-flex-vertical u-cross-center u-width-full-line">
                        <img src={icon.default} alt={name} />
                    </div>
                <div class="u-flex u-main-center  u-width-full-line u-margin-block-start-4">
                    <code>icon-{name}</code>
                </div>
                </li> 
            )
            else if (!isDark) return(
                <li class="grid-box-item u-only-light">
                    <div class="card u-flex u-flex-vertical u-cross-center u-width-full-line">
                        <img src={icon.default} alt={name} />
                    </div>
                    <div class="u-flex u-main-center  u-width-full-line u-margin-block-start-4">
                        <code>icon-{name}</code>
                    </div>
                </li> 
            )
        })}
    </ul>
  </div>
  <div x-bind:class="show === 'gray' ? 'u-hide' : ''">
        <ul
    class="grid-box u-margin-block-start-24"
    style="--grid-gap:1rem; --grid-item-size:8rem; --grid-item-size-small-screens:6rem;"
    >
        {listColor.map((icon) => {
            const splitName = icon.default.split('/')
            const name = splitName[splitName.length - 1].split('.')[0]
            const isDark = icon.default.includes('/dark') ?? false
        if(isDark) return(
                <li class="grid-box-item u-only-dark">
                    <div class="card u-flex u-flex-vertical u-cross-center u-width-full-line">
                        <img src={icon.default} alt={name} />
                    </div>
                  <div class="u-flex u-main-center  u-width-full-line u-margin-block-start-4">
                    <code>icon-{name}</code>
                </div>
                </li> 
            )
            else if (!isDark) return(
                <li class="grid-box-item u-only-light">
                    <div class="card u-flex u-flex-vertical u-cross-center u-width-full-line">
                        <img src={icon.default} alt={name} />
                    </div>
                  <div class="u-flex u-main-center  u-width-full-line u-margin-block-start-4">
                    <code>icon-{name}</code>
                </div>
                </li> 
            )
        })}
    </ul>   

  </div>
</section>
