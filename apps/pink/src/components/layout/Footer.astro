---
const pages = await Astro.glob("../../pages/*/*.mdx");

type Page = {
  title: string | undefined;
  url: string | undefined;
};
let previous:Page = {title: '', url: ''};
let next:Page = {title: '', url: ''};

pages.forEach((page, index) => {
  const url = Astro.url.pathname 
  if (url && page?.url ? page.url.includes(url) : false) {
    previous.url = pages[index === 0 ? pages.length - 1 : index - 1].url;
    previous.title = previous.url?.split("/")[2].replace(/-/g, " ");
    next.url = pages[index === pages.length - 1 ? 0 : index + 1].url;
    next.title = next.url?.split("/")[2].replace(/-/g, " ");
  }
});

//TODO: sort pages according to design team requirements
---

<nav class="main-footer">
  <a class="button is-text" href={previous.url}>
    <span class="icon-arrow-left"></span>
    <span class="text u-capitalize">{previous.title}</span>
  </a>
  <a class="button is-text" href={next.url}>
    <span class="text u-capitalize">{next.title}</span>
    <span class="icon-arrow-right"></span>
  </a>
</nav>

<style>
  .main-footer{
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem;
  }
  .bottomNav {
    padding: 0.5rem;
  }
  .bottomNav-title {
    text-transform: capitalize;
  }
</style>
