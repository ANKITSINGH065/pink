---
const pages = await Astro.glob("../../pages/*/*.mdx");

type Page = {
  title: string | undefined;
  url: string | undefined;
};
let previous:Page = {title: '', url: ''};
let next:Page = {title: '', url: ''};

pages.forEach((page, index) => {
  if (Astro.url.pathname === page.url + "/") {
    previous.url = pages[index === 0 ? pages.length - 1 : index - 1].url;
    previous.title = previous.url?.split("/")[2].replace(/-/g, " ");
    next.url = pages[index === pages.length - 1 ? 0 : index + 1].url;
    next.title = next.url?.split("/")[2].replace(/-/g, " ");
  }
});

//TODO: sort pages according to design team requirements
---

<nav class="pink-pager u-flex u-main-space-between u-padding-block-12">

    <a class="button is-text" href={previous.url} aria-label="prev page">
      <span class="icon-cheveron-left"></span>
      <span class="text u-capitalize">{previous.title}</span>
    </a>

    <a class="button is-text" href={next.url} aria-label="bext page">
        <span class="text u-capitalize">{next.title}</span>
        <span class="icon-cheveron-right"></span>
    </a>
</nav>

<style lang="scss">
  .pink-pager {
      grid-area:pager;
      .button [class*="icon-"]{ transform: scale(calc(1.2 * var(--transform-direction))); }
  }

</style>
